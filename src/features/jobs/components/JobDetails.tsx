import { useEffect, useState } from "react";
import { useParams, useNavigate, Link } from "react-router-dom";
import { useJobsStore } from "../../../store/useJobsStore";
import { Job } from "@features/jobs/jobs.model";
import "./JobDetails.css";

export default function JobDetails() {
  const { id } = useParams<{ id: string }>();
  const navigate = useNavigate();
  const { jobs, loading: jobsLoading, error, fetchJobs, deleteJob } = useJobsStore();

  const [job, setJob] = useState<Job | null>(null);
  const [loading, setLoading] = useState<boolean>(true);
  const [deleting, setDeleting] = useState<boolean>(false);

  useEffect(() => {
    async function loadJob() {
      setLoading(true);
      const delay = 300 + Math.random() * 500;
      await new Promise((resolve) => setTimeout(resolve, delay));

      if (jobs.length === 0) await fetchJobs();

      const found = useJobsStore.getState().jobs.find((j) => j.id === id) || null;
      setJob(found);
      setLoading(false);
    }
    loadJob();
  }, [jobs, fetchJobs, id]);

  useEffect(() => {
    const handleEscape = (e: KeyboardEvent) => {
      if (e.key === "Escape") navigate("/");
    };
    window.addEventListener("keydown", handleEscape);
    return () => window.removeEventListener("keydown", handleEscape);
  }, [navigate]);

  const handleDelete = async () => {
    if (!id || deleting) return;
    if (!confirm("–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –≤–∞–∫–∞–Ω—Å–∏—é?")) return;

    setDeleting(true);
    try {
      await deleteJob(id);
      navigate("/");
    } catch (err) {
      console.error(err);
      setDeleting(false);
      alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏");
    }
  };

  const handleCopyLink = () => {
    navigator.clipboard.writeText(window.location.href);
    alert("–°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞–∫–∞–Ω—Å–∏—é —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞!");
  };

  if (loading || jobsLoading) return <div className="job-details-loading">–ó–∞–≥—Ä—É–∑–∫–∞ –≤–∞–∫–∞–Ω—Å–∏–∏...</div>;
  if (error) return <div className="job-details-error">{error}</div>;
  if (!job)
    return (
      <div className="job-details-notfound">
        –í–∞–∫–∞–Ω—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.{" "}
        <Link to="/" className="job-details-backlink">
          ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
        </Link>
      </div>
    );

  return (
    <div className="job-details-card">
      <div className="job-details-top">
        <Link to="/" className="job-details-backlink">
          ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
        </Link>
        <button className="job-details-copy-btn" onClick={handleCopyLink}>
          üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É
        </button>
      </div>

      <div className="job-details-header">
        <h1 className="job-details-title">{job.title}</h1>
        <span className={`job-details-type ${job.type}`}>
          {job.type === "intern" ? "Intern" : "Full-time"}
        </span>
      </div>

      <div className="job-details-company-info">
        <p className="job-details-company">üíº {job.company}</p>
        <p className="job-details-location">üìç {job.location}</p>
        <p className="job-details-posted">
          üóì –û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ: {new Date(job.postedAt).toLocaleDateString()}
        </p>
      </div>

      <div className="job-details-extra">
        <p>
          <strong>–ó–∞—Ä–ø–ª–∞—Ç–∞:</strong> {job.salaryFrom} ‚Äì {job.salaryTo} {job.currency}
        </p>
      </div>

      {job.tags?.length > 0 && (
        <div className="job-details-tags">
          {job.tags.map((tag, index) => (
            <span key={`${tag}-${index}`} className="job-details-tag">
              {tag}
            </span>
          ))}
        </div>
      )}

      <div className="job-details-description">
        <h2>–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏</h2>
        <p>{job.description}</p>
      </div>

      <div className="job-details-actions">
        <Link to={`/jobs/${job.id}/edit`} className="job-details-edit-btn">
          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
        </Link>
        <button
          onClick={handleDelete}
          className="job-details-delete-btn"
          disabled={deleting}
        >
          {deleting ? "–£–¥–∞–ª–µ–Ω–∏–µ..." : "–£–¥–∞–ª–∏—Ç—å"}
        </button>
      </div>

      <div className="job-details-info-box">
        <h3>–°–æ–≤–µ—Ç —Å–æ–∏—Å–∫–∞—Ç–µ–ª—é</h3>
        <p>
          –ü–µ—Ä–µ–¥ –æ—Ç–∫–ª–∏–∫–æ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤–∞—à–µ —Ä–µ–∑—é–º–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ, –∞ –Ω–∞–≤—ã–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –≤–∞–∫–∞–Ω—Å–∏–∏.
        </p>
      </div>
    </div>
  );
}
